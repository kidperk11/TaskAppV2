{"version":3,"sources":["webpack:///src/app/home/home-routing.module.ts","webpack:///src/app/home/home.page.html","webpack:///src/app/home/home.module.ts","webpack:///src/app/home/home.page.scss","webpack:///src/app/home/home.page.ts"],"names":["routes","path","component","HomePageRoutingModule","imports","forChild","exports","HomePageModule","declarations","HomePage","afAuth","firestore","alertCtrl","navCtrl","user","email","password","taskList","taskName","length","task","push","index","splice","create","header","message","inputs","name","placeholder","buttons","text","role","handler","data","editTask","alert","present","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","cssClass","subHeader","type","console","log","reset","sendPasswordResetEmail","then","res","error","selector","template"],"mappings":"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","file":"home-home-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      Task Stack\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <section *ngIf=\\\"(afAuth.user | async) as user; else loginItems\\\">\\n    <ion-item>\\n      <ion-input type=\\\"text\\\" placeholder=\\\"Enter task\\\" [(ngModel)]=\\\"taskName\\\"> \\n      </ion-input>\\n      <div class=\\\"item-note\\\" >\\n        <ion-button (click)=\\\"addTask()\\\"><ion-icon name=\\\"add\\\"></ion-icon></ion-button>\\n      </div>\\n    </ion-item>\\n    <div padding>\\n      <ion-list>\\n        <ion-item *ngFor=\\\"let todo of taskList; let i = index\\\">\\n          {{todo}}\\n          <div class=\\\"item-note\\\" slot=end>\\n            <ion-button fill=clear (click)=\\\"updateTask(i)\\\">\\n              <ion-icon name=\\\"create\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button fill=clear (click)=\\\"deleteTask(i)\\\">\\n              <ion-icon name=\\\"trash\\\"></ion-icon>\\n            </ion-button>\\n          </div>\\n        </ion-item>\\n      </ion-list>\\n    </div>\\n    <ion-button (click)=\\\"logout()\\\">TEMPORARY Logout</ion-button>\\n    \\n  </section>\\n </ion-content>\\n\\n\\n\\n<ng-template #loginItems>\\n  <h1>Welcome to TaskApp!</h1>\\n  <ion-item>\\n    <ion-label>\\n      Email\\n    </ion-label>\\n    <ion-input [(ngModel)]=\\\"user.email\\\"></ion-input>\\n  </ion-item>\\n  <ion-item>\\n    <ion-label>\\n      Password\\n    </ion-label>\\n    <ion-input type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\"></ion-input>\\n  </ion-item>\\n  <ion-button (click)=\\\"createAccount()\\\">Sign Up</ion-button>\\n  <ion-button (click)=\\\"login()\\\">Login</ion-button>\\n  <ion-button (click)=\\\"recoverPassword()\\\">Forgot Password?</ion-button>\\n\\n  \\n  </ng-template>\\n\\n\\n\\n\\n<!-- \\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <section *ngIf=\\\"(afAuth.user | async) as user; else loginItems\\\">\\n    <ion-list>\\n      <ion-item *ngFor=\\\"let task of taskData\\\" routerLink=\\\"/add-task/{{ task.taskID }}\\\">\\n        \\n        <ion-label>\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                {{ task.taskName }}\\n              </ion-col>\\n            </ion-row>\\n            <ion-row>\\n              <ion-col size=\\\"1\\\">\\n                <ion-icon name=\\\"calendar-clear-outline\\\"></ion-icon>\\n              </ion-col>\\n              <ion-col size=\\\"10\\\">\\n                {{ task.dueDate }}\\n              </ion-col>\\n            </ion-row>\\n            <ion-row>\\n              <ion-col size=\\\"1\\\">\\n                <ion-icon name=\\\"time-outline\\\"></ion-icon>\\n              </ion-col>\\n              <ion-col size=\\\"10\\\">\\n                {{ task.dueTime }}\\n              </ion-col>\\n            </ion-row>\\n            <ion-row>\\n              <ion-col size=\\\"1\\\">\\n                <ion-icon name=\\\"document-text-outline\\\"></ion-icon>\\n              </ion-col>\\n              <ion-col size=\\\"10\\\">\\n                {{ task.description }}\\n              </ion-col>\\n            </ion-row>\\n            \\n          </ion-grid>\\n        </ion-label>\\n      </ion-item>\\n    </ion-list>\\n    <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n      <ion-fab-button routerLink=\\\"/add-task/new\\\">\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-fab>\\n    <ion-button (click)=\\\"logout()\\\">TEMPORARY Logout</ion-button>\\n  </section> -->\\n\\n  <!-- <ion-card>\\n    <ion-card-content>\\n      <ion-card-title>Task Stack Introduction</ion-card-title>\\n      <ion-card-title color=\\\"success\\\">Priority Level: Low</ion-card-title>\\n      <ion-card-title>Due on 3/9 at 9 PM</ion-card-title>\\n      <ion-card-header>This is the task stack! This is where all tasks created in the \\\"Add Task\\\" tab will be displayed.</ion-card-header>\\n        <ion-button (click)=completeButton() slot=\\\"start\\\" color=\\\"success\\\">\\n          <ion-icon name=\\\"checkmark-outline\\\"></ion-icon>\\n        </ion-button>\\n        <ion-button (click)=moveButton() slot=\\\"end\\\" color=\\\"warning\\\">\\n          <ion-icon name=\\\"arrow-redo-outline\\\"></ion-icon>\\n        </ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-content>\\n      <ion-card-title>Host Project on Turing</ion-card-title>\\n      <ion-card-title color=\\\"warning\\\">Priority Level: Medium</ion-card-title>\\n      <ion-card-title>Due on 3/8 at 11:59 PM</ion-card-title>\\n      <ion-card-header>Host the \\\"www\\\" file for the app on Turing. Check the project 4 instructions for the correct directory!</ion-card-header>\\n        <ion-button (click)=completeButton() slot=\\\"start\\\" color=\\\"success\\\">\\n          <ion-icon name=\\\"checkmark-outline\\\"></ion-icon>\\n        </ion-button>\\n        <ion-button (click)=moveButton() slot=\\\"end\\\" color=\\\"warning\\\">\\n          <ion-icon name=\\\"arrow-redo-outline\\\"></ion-icon>\\n        </ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-content>\\n      <ion-card-title>Submit Project 4</ion-card-title>\\n      <ion-card-title color=\\\"danger\\\">Priority Level: High</ion-card-title>\\n      <ion-card-title>Due on 3/8 at 11:59 PM</ion-card-title>\\n      <ion-card-header>Submit the zipped project 4, written report, and website URL to Blackboard. Test the URL before submitting!</ion-card-header>\\n        <ion-button (click)=completeButton() slot=\\\"start\\\" color=\\\"success\\\">\\n          <ion-icon name=\\\"checkmark-outline\\\"></ion-icon>\\n        </ion-button>\\n        <ion-button (click)= moveButton() slot=\\\"end\\\" color=\\\"warning\\\">\\n          <ion-icon name=\\\"arrow-redo-outline\\\"></ion-icon>\\n        </ion-button>\\n    </ion-card-content>\\n  </ion-card> -->\\n\\n  <!----<ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Tab 2</ion-title>\\n    </ion-toolbar>\\n  </ion-header>---->\\n\\n  <!-- TEMPORARY LOGIN SOLUTION -->\\n\\n  \\n\\n\\n    \\n    \\n<!-- </ion-content> -->\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","export default \"#container {\\n  text-align: center;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n\\n#container strong {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n#container p {\\n  font-size: 16px;\\n  line-height: 22px;\\n  color: #8c8c8c;\\n  margin: 0;\\n}\\n\\n#container a {\\n  text-decoration: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2hvbWUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFFQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsUUFBQTtFQUNBLDJCQUFBO0FBQUY7O0FBR0E7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtFQUVBLGNBQUE7RUFFQSxTQUFBO0FBRkY7O0FBS0E7RUFDRSxxQkFBQTtBQUZGIiwiZmlsZSI6ImhvbWUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2NvbnRhaW5lciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG4jY29udGFpbmVyIHN0cm9uZyB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDI2cHg7XG59XG5cbiNjb250YWluZXIgcCB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG5cbiAgY29sb3I6ICM4YzhjOGM7XG5cbiAgbWFyZ2luOiAwO1xufVxuXG4jY29udGFpbmVyIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59Il19 */\";","import { AlertController, NavController } from '@ionic/angular';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Component } from '@angular/core';\n\ninterface User{\n  email?: string;\n  password?: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  user: User = {\n    email: '',\n    password: '',\n  };\n\n  taskList: string[] = [];\n  taskName: string = '';\n\n  constructor(\n    public afAuth: AngularFireAuth,\n    private firestore: AngularFirestore,\n    public alertCtrl: AlertController,\n    public navCtrl: NavController\n  ) {}\n\n  addTask() {\n    if (this.taskName.length > 0) {\n      let task = this.taskName;\n      this.taskList.push(task);\n      this.taskName = \"\";\n    }\n  }\n\n  deleteTask(index){\n    this.taskList.splice(index, 1);\n  }\n\n  async updateTask(index) {\n    const alert = await this.alertCtrl.create({\n      header: 'Update Task?',\n      message: 'Type in your new task to update.',\n      inputs: [{ name: 'editTask', placeholder: 'Task' }],\n      buttons: [{ text: 'Cancel', role: 'cancel' },\n                { text: 'Update', handler: data => {  \n                  this.taskList[index] = data.editTask; }}]\n    });\n    await alert.present();\n  }\n\n  async createAccount(){\n    const user = await this.afAuth.createUserWithEmailAndPassword(\n      this.user.email,\n      this.user.password\n    )\n  }\n\n  async login(){\n    await this.afAuth.signInWithEmailAndPassword(\n      this.user.email,\n      this.user.password\n    );\n  }\n\n  async /*MOVE TO SETTINGS*/ logout(){\n    await this.afAuth.signOut();\n  }\n\n  async recoverPassword(){\n    const alert = await this.alertCtrl.create({\n      cssClass: 'home.page.css',\n      header: 'Recover Your Password',\n      subHeader: 'Please enter the email associated with your account, and you will be sent a link to reset your password.',\n      inputs:[{\n        name: 'email',\n        type: 'email',\n        placeholder: 'example@gmail.com'\n      }],\n      buttons:[{\n        text: 'Cancel',\n        role: 'cancel',\n        handler: () => {\n          console.log('Cancel Success');\n        }\n      }, {\n        text: 'Send Password Reset Email',\n        handler: (reset) => {\n          console.log('Send Email Clicked Success');\n          // this.sendResetEmail(console.log(reset));\n          console.log(reset.email);\n          this.afAuth.sendPasswordResetEmail(reset.email).then((res: any) => {\n            console.log('Reset email has been sent');\n          }, (error) => {\n            console.log(\"Catch error\");\n          })\n          \n        }\n      }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  async sendResetEmail(reset){\n    await this.afAuth.sendPasswordResetEmail(reset).then((res: any) => {\n      console.log('Reset email has been sent');\n    }, (error) => {\n      console.log(\"Catch error\");\n    });\n  }\n}\n"]}